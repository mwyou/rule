proxy-providers:
  Airport1:
    url: "你的订阅链接"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🟢 直连

proxies:
  - {name: 🟢 直连, type: direct}
  
# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
# interface-name: enp6s18
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
profile:
  store-selected: true
  store-fake-ip: true

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  #使用nikki，混入全部不修改的情况，开启接口指定为nikki
  #使用仅内核自行修改下面三项为true
  #device: nikki
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private,cn"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  
pr: &pr {type: select, proxies: [🟢 直连, 🚀 Proxy Select]}

proxy-groups:
  - {name: 🚀 Proxy Select, type: select, proxies: [🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 📹 YouTube,      type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🍀 Google,       type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 👨🏿‍💻 GitHub,       type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🤖 AI,           type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🎥 NETFLIX,      type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 📲 Telegram,     type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🎵 TikTok,       type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🐳 Docker,       type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🦜 Twitter,      type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🐬 OneDrive,     type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🪟 Microsoft,    type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 💶 PayPal,       type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🟢 Apple,        type: select, proxies: [🚀 Proxy Select, 🟢 直连], include-all: true, filter: "(?i)新加坡|sg|日本|jp"}
  - {name: 🐟 Others,       <<: *pr}
  
rules:
  - RULE-SET,private,🟢 直连
  - RULE-SET,private_ip,🟢 直连,no-resolve
  - RULE-SET,proxylite,🚀 Proxy Select
  - RULE-SET,cn,🟢 直连
  - RULE-SET,cn_ip,🟢 直连
  - RULE-SET,youtube,📹 YouTube
  - RULE-SET,youtube_ip,📹 YouTube
  - RULE-SET,google,🍀 Google
  - RULE-SET,google_ip,🍀 Google
  - RULE-SET,github,👨🏿‍💻 GitHub
  - RULE-SET,github_ip,👨🏿‍💻 GitHub
  - RULE-SET,ai,🤖 AI
  - RULE-SET,ai_ip,🤖 AI
  - RULE-SET,netflix,🎥 NETFLIX
  - RULE-SET,netflix_ip,🎥 NETFLIX
  - RULE-SET,telegram,📲 Telegram
  - RULE-SET,telegram_ip,📲 Telegram
  - RULE-SET,tiktok,🎵 TikTok
  - RULE-SET,tiktok_ip,🎵 TikTok
  - RULE-SET,docker,🐳 Docker
  - RULE-SET,docker_ip,🐳 Docker
  - RULE-SET,twitter,🦜 Twitter
  - RULE-SET,twitter_ip,🦜 Twitter
  - RULE-SET,onedrive,🐬 OneDrive
  - RULE-SET,microsoft,🪟 Microsoft
  - RULE-SET,apple,🟢 直连
  - RULE-SET,apple_ip,🟢 直连
  - RULE-SET,paypal,💶 PayPal
  - RULE-SET,geolocation-!cn,🚀 Proxy Select
  - MATCH,🐟 Others
  
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  private:            { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs" }
  private_ip:         { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs" }
  
  cn:                 { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs" }
  cn_ip:              { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs" }
  
  proxylite:          { <<: *class,  url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}

  youtube:            { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs" }
  youtube_ip:         { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/youtube.mrs" }

  google:             { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs" }
  google_ip:          { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs" }

  github:             { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs" }
  github_ip:          { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/github.mrs" }

  ai:                 { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs" }
  ai_ip:              { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/openai.mrs" }

  netflix:            { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs" }
  netflix_ip:         { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs" }

  telegram:           { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs" }
  telegram_ip:        { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs" }

  tiktok:             { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs" }
  tiktok_ip:          { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/tiktok.mrs" }

  docker:             { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/docker.mrs" }
  docker_ip:          { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/docker.mrs" }
  
  twitter:            { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs" }
  twitter_ip:         { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs" }

  onedrive:           { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs" }
  
  microsoft:          { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs" }
  
  apple:              { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs" }
  apple_ip:           { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/apple.mrs" }
  
  paypal:             { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs" }
  
  geolocation-!cn:    { <<: *ip,     url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/geolocation-!cn.mrs" }
